@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IDisposable
@using System.Net.Http
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using PCHAT.UI.Shared
@using Newtonsoft.Json;

@if (!loggedIn)
{
    <div>
        <label>Welcome!, Kindly register or login if you already have an account.</label>
    </div>
}


@if (loggedIn)
{
    <div class="text-center">
        <label> Your Name: <strong>@username.ToUpper()</strong></label>
    </div>

    <div>
        <label> Users</label>
    </div>


    @if (users.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">User Name</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Actions</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var user in users)
                {
                    <tr>
                        <td>
                            <img src="" alt="user image" style="width:100px;" />
                        </td>
                        <td class="align-middle">
                            @user.UserName.ToUpper()
                        </td>
                        <td class="align-middle">
                            @user.Gender.ToUpper()
                        </td>
                        <td class="align-middle">
                            <button @onclick="@(e => gotodet(user.Id))" type="button" class="btn btn-success">Chat</button>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <span>
            Loading users...
        </span>
    }

}



@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private List<UserDto> users = new List<UserDto>();

    private int SenderId { get; set; }
    private int RecipientId { get; set; }
    private DateTime MessageSent { get; set; }
    private string Content { get; set; }
    private string username { get; set; }
    private bool loggedIn = false;


    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:62744/chathub")
            .Build();


        await hubConnection.StartAsync();
        Console.WriteLine("connected in details");


        var data = await sessionStorage.GetItemAsync<UserDto>("data");
        @if (data != null)
        {
            username = data.UserName;
            loggedIn = true;

            users = await Http.GetFromJsonAsync<List<UserDto>>($"http://localhost:62744/api/user?id={data.Id}");

        }


    }

    public void gotodet(string id)
    {
        NavigationManager.NavigateTo($"/UserDetail/{id}");
    }

    async Task Send()
    {
        var data = await sessionStorage.GetItemAsync<string>("data");
        UserDto myCustomObject = JsonConvert.DeserializeObject<UserDto>(data);
        //var r = new {SenderId = myCustomObject.id, RecipientId = myCustomObject., MessageSent = Content}
        await hubConnection.SendAsync("SendMessage", data);
        return;
    }

    public bool IsConnected =>
    hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}